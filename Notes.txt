Chapter 5
Dependent pairs e.g. (len ** Vect len a)

Chapter 7
%name for auto defaulting names

Chapter 8
The need for Refl, DecEq, etc (as == does not guarantee equality)
cong : {f: a -> b} ->   (a = b) -> f a = f b
DecEq, Yes prf, No contra
impossible

Chapter 9
ELem to show an element is in a list (Here & There)
absurd for an impossible to construct case
Use auto to make calling removeElem sane

Chapter 11
Delay & Force for manipulating infinite computations.
Inserted automatically by the compiler (see InfList.idr)